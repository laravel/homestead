#!/usr/bin/env bash
##################################
# Usage:                         #
# sudo ./bin/wsl-init            #
##################################
export DEBIAN_FRONTEND=noninteractive

echo "Changing current working directory to Homestead directory..."
cd "$(dirname "$0")/.."

if [[ $EUID -ne 0 ]]; then
    echo "Error: This script must be run as root.">&2

    exit 1
fi

UNAME=$(lsb_release -is)
if [[ "$UNAME" != "Ubuntu" ]]; then
    echo "Error: WSL Homestead only supports Ubuntu Distro">&2

    exit 1
fi
UBUNTU_VERSION=$(lsb_release -rs)
if [[ "$UBUNTU_VERSION" != "20.04" && "$UBUNTU_VERSION" != "22.04" ]]; then
    echo "Error: WSL Homestead only supports Ubuntu 20.04 and 22.04.">&2

    exit 1
fi

if [[ -f /root/.homestead-provisioned ]]; then
    echo "Error: This server has already been provisioned by Laravel Homestead." >&2
    echo "If you need to re-provision, you may remove the /root/.homestead-provisioned file and try again." >&2

    exit 1
fi
echo "Starting..."

echo "What is your WSL user name? [vagrant]: "
read WSL_USER_NAME

echo "What is your WSL user group? (Same as username if you're unsure) [vagrant]: "
read WSL_USER_GROUP

# Set default
if [ -z "${WSL_USER_NAME}" ]; then
    WSL_USER_NAME=vagrant
fi
if [ -z "${WSL_USER_GROUP}" ]; then
    WSL_USER_GROUP=vagrant
fi

# Validate user and group
if ! id "$WSL_USER_NAME" &>/dev/null; then
    echo "Error: User $WSL_USER_NAME does not exist.">&2

    exit 1
fi
if ! getent group "$WSL_USER_GROUP" &>/dev/null; then
    echo "Error: Group $WSL_USER_GROUP does not exist.">&2

    exit 1
fi
if ! groups "$WSL_USER_NAME" | grep -q "\b$WSL_USER_GROUP\b"; then
    echo "Error: User $WSL_USER_NAME is not a member of group $WSL_USER_GROUP.">&2

    exit 1
fi

# Save necessary information for features
mkdir -p ~/.homestead-features
mkdir -p /home/$WSL_USER_NAME/.homestead-features
echo $WSL_USER_NAME > ~/.homestead-features/wsl_user_name
echo $WSL_USER_GROUP > ~/.homestead-features/wsl_user_group

# Update Package List
apt-get update

# Update System Packages
apt-get upgrade -y

# Force Locale
echo "LC_ALL=en_US.UTF-8" >> /etc/default/locale
locale-gen en_US.UTF-8

apt-get install -y software-properties-common curl gnupg debian-keyring debian-archive-keyring apt-transport-https \
ca-certificates

# Install Some PPAs
apt-add-repository ppa:ondrej/php -y

# Prepare keyrings directory
sudo mkdir -p /etc/apt/keyrings

# NodeJS
curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | sudo gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg
echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_21.x nodistro main" | sudo tee /etc/apt/sources.list.d/nodesource.list

## Update Package Lists
apt-get update -y

# Install Some Basic Packages
apt-get install -y build-essential dos2unix gcc git git-lfs libmcrypt4 libpcre3-dev libpng-dev chrony unzip make pv \
python3-pip re2c supervisor unattended-upgrades whois vim cifs-utils bash-completion zsh graphviz avahi-daemon tshark

# Install Generic PHP packages
apt-get install -y --allow-change-held-packages \
php-imagick php-memcached php-redis php-xdebug php-dev php-swoole

# PHP 8.3
bash 'scripts/features/php8.3.sh'

# Install Composer
curl -sS https://getcomposer.org/installer | php
mv composer.phar /usr/local/bin/composer
chown -R $WSL_USER_NAME:$WSL_USER_GROUP /home/$WSL_USER_NAME/.config

# Install Global Packages
sudo su $WSL_USER_NAME <<'EOF'
/usr/local/bin/composer global require "laravel/envoy=^2.0"
/usr/local/bin/composer global require "laravel/installer=^5.0"
/usr/local/bin/composer global config --no-plugins allow-plugins.slince/composer-registry-manager true
/usr/local/bin/composer global require "slince/composer-registry-manager=^2.0"
EOF

# Install Nginx
apt-get install -y --allow-downgrades --allow-remove-essential --allow-change-held-packages nginx

rm /etc/nginx/sites-enabled/default
rm /etc/nginx/sites-available/default

# Create a configuration file for Nginx overrides.
mkdir -p /home/$WSL_USER_NAME/.config/nginx
chown -R $WSL_USER_NAME:$WSL_USER_GROUP /home/$WSL_USER_NAME
touch /home/$WSL_USER_NAME/.config/nginx/nginx.conf
ln -sf /home/$WSL_USER_NAME/.config/nginx/nginx.conf /etc/nginx/conf.d/nginx.conf

# Set The Nginx & PHP-FPM User
sed -i "s/user www-data;/user $WSL_USER_NAME;/" /etc/nginx/nginx.conf
sed -i "s/# server_names_hash_bucket_size.*/server_names_hash_bucket_size 64;/" /etc/nginx/nginx.conf

# Disable XDebug On The CLI
phpdismod -s cli xdebug

service nginx restart

# Add $WSL_USER_NAME User To WWW-Data
usermod -a -G www-data $WSL_USER_NAME
id $WSL_USER_NAME
groups $WSL_USER_GROUP

# Install Node
apt-get install -y nodejs
/usr/bin/npm install -g npm

# Install SQLite
apt-get install -y sqlite3 libsqlite3-dev

# Disable Apparmor
# See https://github.com/laravel/homestead/issues/629#issue-247524528
service apparmor stop
update-rc.d -f apparmor remove

apt-get autoremove -y
apt-get autoclean

# Install MariaDB
bash 'scripts/features/mariadb.sh'

# Install Redis, Memcached, & Beanstalk
apt-get install -y redis-server memcached
systemctl enable redis-server
service redis-server start

# One last upgrade check
apt-get upgrade -y

# Clean Up
chown -R $WSL_USER_NAME:$WSL_USER_GROUP /home/$WSL_USER_NAME
chown -R $WSL_USER_NAME:$WSL_USER_GROUP /usr/local/bin

# Add Composer Global Bin To Path
printf "\nPATH=\"$(sudo su - $WSL_USER_NAME -c 'composer config -g home 2>/dev/null')/vendor/bin:\$PATH\"\n" | tee -a /home/$WSL_USER_NAME/.profile

apt-get -y autoremove
apt-get -y clean

# What are you doing Ubuntu?
# https://askubuntu.com/questions/1250974/user-root-cant-write-to-file-in-tmp-owned-by-someone-else-in-20-04-but-can-in
sysctl fs.protected_regular=0

# Setup Homestead repo
su $WSL_USER_NAME -c 'composer install'
su $WSL_USER_NAME -c 'bash init.sh'
