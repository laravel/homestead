#
# Sphinx configuration file sample
#
# WARNING! While this sample file mentions all available options,
# it contains (very) short helper descriptions only. Please refer to
# doc/sphinx.html for details.
#

#############################################################################
## data source definition
#############################################################################

source cgr
{
    type= mysql
    sql_host               = localhost
    sql_user               = homestead
    sql_pass               = secret
    sql_db                 = cgr
    sql_port               = 3306
    sql_ranged_throttle    = 0
}

#source tripwizard
#{
#    type= mysql
#    sql_host               = localhost
#    sql_user               = root
#    sql_pass               = test12345
#    sql_db                 = trip_rvtrip_v2
#    sql_port               = 3306
#    sql_ranged_throttle    = 0
#}

#source poitw : tripwizard
#{
#    sql_query              = SELECT poi_id, name AS cg_name, city AS cg_city_name, state AS region_abbvr, latitude AS cg_latitude, longitude AS cg_longitude, #rating \
#                             FROM poi p \
#                             WHERE poitype_id = 1 \
#                             ORDER BY rating DESC
#    sql_attr_float          = rating
#    sql_field_string        = cg_name
#    sql_attr_string         = cg_city_name
#    sql_attr_string         = region_abbvr
#    sql_attr_float          = cg_latitude
#    sql_attr_float          = cg_longitude
#}


source parks : cgr
{
    sql_query              = SELECT p.cg_id, p.cg_id as cg_id_attr, p.last_rate, p.avg_rate, p.cg_avg_rating, p.park_type, \
                                p.cg_latitude, p.cg_longitude, p.cg_city_id, p.cg_region_id, p.cg_user_id, p.cg_rating_count, \
                                p.cg_name, p.cg_electric, p.cg_50amp, p.cg_water, p.cg_sewer, p.cg_catv, p.cg_wifi, p.cg_pets, \
                                p.cg_pullthru, p.cg_bigrig, p.cg_waterfront, p.cg_shade, p.cg_pool, p.cg_tents, p.cg_family, \
                                p.park_slug, UNIX_TIMESTAMP(p.last_update) AS last_update, r.region_name, r.country, \
                                c.cg_city_name, r.region_abbvr, r.region_name, r.country, r.region_slug, c.city_slug,  \
				p.cg_55_plus, p.cg_boondocking, p.cg_full_hookup, \
				(SELECT GROUP_CONCAT(affiliation_id) FROM park_affiliation_assoc paa WHERE p.cg_id = paa.cg_id) AS affiliation_ids \
FROM cg_park p \
left JOIN cg_region r on (p.cg_region_id = r.region_id) \
left JOIN cg_city c on (p.cg_city_id = c.cg_city_id) \
WHERE p.approved = 1 \

    sql_attr_multi         = uint affiliation_id from query; SELECT cg_id, affiliation_id FROM park_affiliation_assoc
    sql_attr_uint          = cg_id
    sql_attr_uint          = cg_id_attr
    sql_attr_uint          = cg_city_id
    sql_attr_float         = cg_avg_rating
    sql_attr_uint          = last_rate
    sql_attr_uint          = avg_rate
    sql_attr_uint          = cg_rating_count
    sql_field_string       = park_type
    sql_attr_float         = cg_latitude
    sql_attr_float         = cg_longitude
    sql_field_string       = affiliation_ids
    sql_field_string       = cg_region_id
    sql_field_string       = cg_user_id
    sql_field_string       = cg_name
    sql_field_string       = cg_electric
    sql_field_string       = cg_50amp
    sql_field_string       = cg_water
    sql_field_string       = cg_sewer
    sql_field_string       = cg_catv
    sql_field_string       = cg_wifi
    sql_field_string       = cg_pets
    sql_field_string       = cg_pullthru
    sql_field_string       = cg_bigrig
    sql_field_string       = cg_waterfront
    sql_field_string       = cg_shade
    sql_field_string       = cg_pool
    sql_field_string       = cg_tents
    sql_field_string       = cg_family
    sql_field_string       = region_slug
    sql_field_string       = region_abbvr
    sql_field_string       = city_slug
    sql_field_string       = park_slug
    sql_field_string       = cg_city_name
    sql_field_string       = cg_55_plus
    sql_field_string       = cg_boondocking
    sql_field_string       = cg_full_hookup

    sql_attr_timestamp     = last_update
    sql_field_string	= region_name
}

source cities : cgr
{
    sql_query              = SELECT c.cg_city_id, c.cg_city_id as cg_city_id_attr, c.latitude, c.longitude, c.cg_region_id, c.cg_city_name, c.zipcode, c.population, c.city_slug, c.nearby_park_count, UNIX_TIMESTAMP(c.last_update) AS last_update, r.region_name, r.region_slug FROM cg_city c \
			left join cg_region r on (r.region_id = c.cg_region_id) \

    sql_attr_uint     	   = cg_city_id_attr
    sql_field_string	   = region_name
    sql_field_string       = region_slug
    sql_field_string       = city_slug
    sql_attr_uint          = cg_city_id
    sql_attr_float         = latitude
    sql_attr_float         = longitude
    sql_attr_uint     	   = cg_region_id
    sql_field_string       = cg_city_name
    sql_field_string       = zipcode
    sql_attr_uint          = population
    sql_attr_uint	   = nearby_park_count
    sql_attr_timestamp     = last_update
}

source regions : cgr
{
    sql_query              = SELECT region_id, region_name, country, region_slug, park_count, UNIX_TIMESTAMP(last_update) AS last_update FROM cg_region

    sql_field_string       = region_name
    sql_field_string	   = region_slug
    sql_attr_uint	   = park_count
    sql_attr_timestamp     = last_update
}

#############################################################################
## index definition
#############################################################################

#index poitwindex
#{
#    source           = poitw
#    path             = /var/lib/sphinxsearch/data/poitw
#    docinfo          = extern
#    mlock            = 0
#    morphology       = stem_en    
#    min_word_len     = 1    
#    html_strip       = 0    
#    min_prefix_len   = 1 
#}

index parkindex
{
    source           = parks
    path             = /var/lib/sphinxsearch/data/parks
    docinfo          = extern
    mlock            = 0
    morphology       = stem_en
    min_word_len     = 1
    html_strip       = 0
    min_prefix_len   = 1
}

index cityindex
{
    source           = cities
    path             = /var/lib/sphinxsearch/data/cities
    docinfo          = extern
    mlock            = 0
    morphology       = stem_en
    min_word_len     = 1
    html_strip       = 0
    min_prefix_len   = 1
}

index regionindex
{
    source           = regions
    path             = /var/lib/sphinxsearch/data/regions
    docinfo          = extern
    mlock            = 0
    morphology       = stem_en
    min_word_len     = 1
    html_strip       = 0
    min_prefix_len   = 1
}


#############################################################################
## indexer settings
#############################################################################

indexer
{
    mem_limit       = 512M
    max_iops        = 0
}

#############################################################################
## searchd settings
#############################################################################

searchd
{
    listen            = 9312
    listen            = 9306:mysql41

    log               = /var/log/sphinxsearch/searchd.log
    query_log         = /var/log/sphinxsearch/query.log

    read_timeout      = 5
    client_timeout    = 300
    max_children      = 30

    pid_file          = /var/run/sphinxsearch/searchd.pid

    seamless_rotate   = 1
    preopen_indexes   = 1
    unlink_old        = 1

    mva_updates_pool  = 1M
    max_packet_size   = 8M
    max_filters       = 256

    max_filter_values = 4096
    max_batch_queries = 32
    workers           = threads # for RT to work

    binlog_path = #
}

